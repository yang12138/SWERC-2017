
一句话题意:一个2000*2000的方格阵,有些位置是空的有些不是,100000次查询,查询给出X,Y,求有多少种方法把X*Y的矩形放进这个方格阵中,矩阵不能旋转,边平行于方格阵的边.

题解:
对每个格子求出包括它自身在内往右走有多少个连续的空位置.用数组len[i][j]表示.

len[1][Y] len[2][Y] ... len[X][Y]
len[1][Y-1] len[2][Y-1] ... len[X][Y-1]
...
...
...
len[1][1] len[2][1] ... len[X][1]


然后对每列的格子单独考虑,求出所有以第i个值为最小值的区间,假设第i个值是a[i],
求出左边第一个大于a[i]的数的位置l,右边第一个大于等于a[i]的数位置r(去重),
那么就能求出所有以第i个值为最小值的区间,暴力算所有区间的话要O(n^2)的时间,
但是这里可以优化成O(nlogn)的,可以自行考虑一下,最后再搞一下就可以求出ans数组,ans[i][j]表示放入i*j的矩形的方案数,输入输出就行了,总复杂度O(n^2logn)
